import arcpy

# Defina o caminho para o seu arquivo de geodatabase ou shapefile
caminho_talhoes = "caminho/para/seu/talhoes.shp"

# Defina a área por parcela (hectares)
area_por_parcela = 10  # ajuste conforme necessário

# Nome do campo a ser adicionado
campo_removidas = "Parcelas_Removidas"

# Verifique se o campo já existe
field_names = [f.name for f in arcpy.ListFields(caminho_talhoes)]

if campo_removidas not in field_names:
    try:
        # Adicione um novo campo para armazenar o número de parcelas removidas
        arcpy.AddField_management(caminho_talhoes, campo_removidas, "LONG")
    except Exception as e:
        # Aqui você pode registrar o erro em um log ou lidar de outra forma
        arcpy.AddMessage(f'Erro ao adicionar o campo: {e}')
else:
    arcpy.AddMessage(f'O campo "{campo_removidas}" já existe. Nenhuma alteração foi feita.')

# Abra o cursor de atualização para iterar sobre os talhões
with arcpy.da.UpdateCursor(caminho_talhoes, ["OID@", "Área", "Parcelas", campo_removidas]) as cursor:
    for row in cursor:
        oid = row[0]
        area_total = row[1]
        num_parcelas = row[2]

        # Calcule o número de parcelas corretas
        parcelas_necessarias = area_total / area_por_parcela

        # Verifique se o número de parcelas precisa ser ajustado
        if num_parcelas > parcelas_necessarias:
            parcelas_a_remover = num_parcelas - parcelas_necessarias
            
            # Atualize o número de parcelas
            row[2] = parcelas_necessarias
            
            # Armazene o número de parcelas removidas no novo campo
            row[3] = parcelas_a_remover
            
            # Atualize a linha no shapefile
            cursor.updateRow(row)

# Mensagem de conclusão (opcional, se desejado)
arcpy.AddMessage("Atualização concluída. O número de parcelas removidas foi salvo no campo 'Parcelas_Removidas'.")
